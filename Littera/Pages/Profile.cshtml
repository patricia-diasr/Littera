@page
@model Littera.Pages.ProfileModel
@{
}

<style>
    .profile-container {
        padding: 40px;
        background-color: var(--bs-light);
        border-radius: var(--radius-lg);
        box-shadow: var(--shadow-md);
        margin: 30px 0;
    }

    .profile-header {
        background: linear-gradient(135deg, var(--header-bg) 0%, rgba(25, 40, 65, 0.85) 100%);
        border-radius: var(--radius-lg) var(--radius-lg) 0 0;
        margin: -40px -40px 30px -40px;
        padding: 40px;
        position: relative;
        color: white;
        overflow: hidden;
    }

    .profile-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%23ffffff' fill-opacity='0.05' fill-rule='evenodd'/%3E%3C/svg%3E");
        opacity: 0.6;
        z-index: 0;
    }

    .user-avatar {
        width: 130px;
        height: 130px;
        border-radius: 50%;
        object-fit: cover;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        border: 4px solid white;
        position: relative;
        z-index: 1;
        transition: transform 0.3s ease;
    }

    .avatar-upload-wrapper {
        position: relative;
        width: fit-content;
        margin: 0 auto;
    }

    .avatar-upload-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        opacity: 0;
        transition: opacity 0.3s ease;
        color: white;
        font-weight: 500;
        z-index: 2;
    }

    .avatar-upload-wrapper:hover .avatar-upload-overlay {
        opacity: 1;
    }

    .avatar-upload-wrapper:hover .user-avatar {
        transform: scale(1.05);
    }

    .profile-details {
        position: relative;
        z-index: 1;
    }

    .profile-username {
        font-size: 1.8rem;
        font-weight: 700;
        margin-bottom: 0;
        color: white;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .profile-email {
        font-size: 1rem;
        color: rgba(255, 255, 255, 0.85);
        margin-bottom: 20px;
    }

    .btn-profile-action {
        padding: 8px 16px;
        border-radius: var(--radius-md);
        font-weight: 500;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .btn-profile-action:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }

    .btn-edit-profile {
        background-color: white;
        color: var(--header-bg);
        border: none;
    }

    .btn-edit-profile:hover {
        background-color: rgba(255, 255, 255, 0.9);
    }

    .btn-logout {
        background-color: rgba(255, 255, 255, 0.15);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
    }

    .btn-logout:hover {
        background-color: rgba(255, 255, 255, 0.25);
    }

    .stats-wrapper {
        position: relative;
        z-index: 1;
    }

    .stats-card {
        background-color: white;
        border-radius: var(--radius-md);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
        padding: 24px;
        transition: all 0.3s ease;
        height: 100%;
        border-left: 4px solid var(--bs-primary);
        display: flex;
        flex-direction: column;
    }

    .stats-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
    }

    .stats-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .stats-icon-wrapper {
        width: 48px;
        height: 48px;
        border-radius: 12px;
        background-color: rgba(var(--bs-primary-rgb), 0.1);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .stats-icon {
        font-size: 1.5rem;
        color: var(--bs-primary);
    }

    .stats-number {
        font-size: 2.2rem;
        font-weight: 700;
        color: var(--header-bg);
        margin-bottom: 4px;
        line-height: 1;
    }

    .stats-label {
        color: var(--bs-secondary);
        font-weight: 500;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .profile-content {
        background-color: white;
        border-radius: var(--radius-lg);
        margin-top: -20px;
        position: relative;
        z-index: 1;
        box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.08);
        padding: 30px;
    }

    .section-title {
        font-family: var(--font-heading);
        font-weight: 600;
        font-size: 1.25rem;
        margin-top: 30px;
        margin-bottom: 20px;
        border-bottom: 2px solid rgba(25, 40, 65, 0.1);
        padding-bottom: 8px;
        color: var(--header-bg);
        position: relative;
    }

    .section-title:after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 60px;
        height: 2px;
        background-color: var(--bs-primary);
    }

    .tab-content {
        padding: 25px 0;
    }

    .nav-tabs {
        border-bottom: 2px solid rgba(25, 40, 65, 0.1);
    }

    .nav-tabs .nav-link {
        border: none;
        color: var(--bs-secondary);
        font-weight: 500;
        padding: 10px 16px;
        margin-right: 10px;
        border-bottom: 2px solid transparent;
        transition: all var(--transition-fast);
    }

    .nav-tabs .nav-link:hover {
        color: var(--header-bg);
        border-bottom: 2px solid rgba(25, 40, 65, 0.2);
    }

    .nav-tabs .nav-link.active {
        color: var(--bs-primary);
        background-color: transparent;
        border-bottom: 2px solid var(--bs-primary);
    }

    .form-label {
        font-weight: 600;
        color: var(--header-bg);
        margin-bottom: 8px;
    }

    .form-control, .form-select {
        border-radius: var(--radius-sm);
        border: 1px solid rgba(25, 40, 65, 0.2);
        padding: 0.6rem 0.75rem;
        transition: all var(--transition-fast);
    }

    .form-control:focus, .form-select:focus {
        border-color: var(--bs-primary);
        box-shadow: 0 0 0 0.15rem rgba(67, 97, 238, 0.25);
    }

    .password-toggle-wrapper {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin: 20px 0;
        padding: 12px 0;
        border-top: 1px solid rgba(25, 40, 65, 0.1);
    }

    .password-toggle-label {
        font-size: 0.95rem;
        color: var(--header-bg);
        font-weight: 500;
        margin: 0;
    }

    .toggle-switch {
        position: relative;
        display: inline-block;
        width: 50px;
        height: 26px;
    }

        .toggle-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .toggle-slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: 0.3s;
        border-radius: 26px;
    }

        .toggle-slider:before {
            position: absolute;
            content: "";
            height: 20px;
            width: 20px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: 0.3s;
            border-radius: 50%;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

    input:checked + .toggle-slider {
        background-color: var(--bs-primary);
    }

        input:checked + .toggle-slider:before {
            transform: translateX(24px);
        }

    .toggle-slider:hover {
        box-shadow: 0 0 8px rgba(67, 97, 238, 0.3);
    }

    .table {
        border-collapse: separate;
        border-spacing: 0;
        width: 100%;
        margin-bottom: 1rem;
        border-radius: var(--radius-md);
        overflow: hidden;
    }

    .table thead th {
        background-color: rgba(25, 40, 65, 0.03);
        color: var(--header-bg);
        font-weight: 600;
        border-top: none;
        border-bottom: 2px solid rgba(25, 40, 65, 0.1);
        padding: 12px 15px;
    }

    .table tbody tr {
        transition: all var(--transition-fast);
    }

    .table tbody tr:hover {
        background-color: rgba(25, 40, 65, 0.02);
    }

    .table td {
        padding: 12px 15px;
        border-top: 1px solid rgba(25, 40, 65, 0.05);
        vertical-align: middle;
    }

    .color-preview {
        display: inline-block;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        margin-right: 10px;
        box-shadow: var(--shadow-sm);
        border: 1px solid rgba(0,0,0,0.1);
    }

    .table-actions {
        display: flex;
        gap: 10px;
        justify-content: flex-end;
    }

    .btn-icon {
        width: 32px;
        height: 32px;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transition: all var(--transition-fast);
    }

    .btn-icon:hover {
        transform: translateY(-2px);
    }

    .btn-edit-sm {
        background-color: var(--bs-primary);
        color: white;
    }

    .btn-delete-sm {
        background-color: #e63946;
        color: white;
    }

    .badge-priority {
        background-color: var(--bs-secondary);
        color: white;
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 0.75rem;
        font-weight: normal;
    }

    .priority-high {
        background-color: #e63946;
    }

    .priority-medium {
        background-color: var(--bs-warning);
    }

    .priority-low {
        background-color: var(--bs-primary);
    }

    .color-picker-wrapper {
        position: relative;
    }

    @@media (max-width: 768px) {
        .profile-container {
            padding: 25px;
        }

        .stats-number {
            font-size: 2rem;
        }

        .user-avatar {
            width: 120px;
            height: 120px;
        }

        .table-responsive {
            overflow-x: auto;
        }

        .table td, .table th {
            padding: 10px;
        }
    }
</style>

<div class="container profile-container">
    <div class="profile-header">
        <div class="row align-items-center">
            <div class="col-lg-3 col-md-4 mb-4 mb-md-0 text-center">
                <div class="avatar-upload-wrapper">
                    <img src="@(!string.IsNullOrEmpty(Model.AuthenticatedUser.Photo) ? Model.AuthenticatedUser.Photo : "/uploads/avatars/default.png")" class="user-avatar" alt="Foto de perfil">
                </div>
                <div class="profile-details">
                    <h3 class="profile-username">@Model.AuthenticatedUser.Name</h3>
                    <p class="profile-email">@Model.AuthenticatedUser.Email</p>
                    <div class="d-flex justify-content-center gap-2">
                        <button class="btn btn-profile-action btn-edit-profile" data-bs-target="#editProfileModal">
                            <i class="bi bi-pencil-fill me-2"></i>Editar
                        </button>
                        <button class="btn btn-profile-action btn-logout" data-bs-toggle="modal" data-bs-target="#logoutModal">
                            <i class="bi bi-box-arrow-right me-2"></i>Sair
                        </button>
                    </div>
                </div>
            </div>

            <div class="col-lg-9 col-md-8">
                <div class="stats-wrapper">
                    <div class="row">
                        <div class="col-md-4 mb-4 mb-md-0">
                            <div class="stats-card">
                                <div class="stats-card-header">
                                    <div class="stats-icon-wrapper">
                                        <i class="bi bi-book stats-icon"></i>
                                    </div>
                                </div>
                                <div class="stats-number">@Model.TotalBooksRead</div>
                                <div class="stats-label">Livros lidos</div>
                            </div>
                        </div>
                        <div class="col-md-4 mb-4 mb-md-0">
                            <div class="stats-card" style="border-left-color: #FF6B6B;">
                                <div class="stats-card-header">
                                    <div class="stats-icon-wrapper" style="background-color: rgba(255, 107, 107, 0.1);">
                                        <i class="bi bi-tag stats-icon" style="color: #FF6B6B;"></i>
                                    </div>
                                </div>
                                <div class="stats-number">@Model.TotalTags</div>
                                <div class="stats-label">Tags criadas</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stats-card" style="border-left-color: #4ECDC4;">
                                <div class="stats-card-header">
                                    <div class="stats-icon-wrapper" style="background-color: rgba(78, 205, 196, 0.1);">
                                        <i class="bi bi-collection stats-icon" style="color: #4ECDC4;"></i>
                                    </div>
                                </div>
                                <div class="stats-number">@Model.TotalCollections</div>
                                <div class="stats-label">Coleções</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <ul class="nav nav-tabs" id="profileTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="collections-tab" data-bs-toggle="tab" data-bs-target="#collections" type="button" role="tab" aria-controls="collections" aria-selected="true">
                <i class="bi bi-collection me-2"></i>Coleções
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="tags-tab" data-bs-toggle="tab" data-bs-target="#tags" type="button" role="tab" aria-controls="tags" aria-selected="false">
                <i class="bi bi-tags me-2"></i>Tags
            </button>
        </li>
    </ul>

    <div class="tab-content" id="profileTabsContent">
        <div class="tab-pane fade show active" id="collections" role="tabpanel" aria-labelledby="collections-tab">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div class="section-title">Minhas Coleções</div>
                <button class="btn btn-action btn-save" data-bs-toggle="modal" data-bs-target="#newCollectionModal">
                    <i class="bi bi-plus-lg me-2"></i>Nova Coleção
                </button>
            </div>

            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Nome</th>
                            <th>Cor</th>
                            <th>Prioridade</th>
                            <th style="width: 100px;">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Collections != null && Model.Collections.Any())
                        {
                            @foreach (var collection in Model.Collections)
                            {
                                var badgeClass = collection.Priority switch
                                {
                                    1 => "priority-high",
                                    2 => "priority-medium",
                                    3 => "priority-low",
                                    _ => ""
                                };
                                var priorityLabel = collection.Priority switch
                                {
                                    1 => "Alta",
                                    2 => "Média",
                                    3 => "Baixa",
                                    _ => ""
                                };
                                <tr>
                                    <td>@collection.Name</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <span class="color-preview" style="background-color: @collection.Color;"></span>
                                            @collection.Color
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge-priority @badgeClass">
                                            @priorityLabel
                                        </span>
                                    </td>
                                    <td>
                                        <div class="table-actions">
                                            <button class="btn btn-icon btn-edit-sm" data-bs-toggle="modal" data-bs-target="#editCollectionModal" data-id="@collection.Id" data-name="@collection.Name" data-color="@collection.Color" data-priority="@collection.Priority">
                                                <i class="bi bi-pencil-fill"></i>
                                            </button>
                                            <button class="btn btn-icon btn-delete-sm" data-bs-toggle="modal" data-bs-target="#deleteCollectionModal" data-id="@collection.Id">
                                                <i class="bi bi-trash-fill"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="tab-pane fade" id="tags" role="tabpanel" aria-labelledby="tags-tab">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div class="section-title">Minhas Tags</div>
                <button class="btn btn-action btn-save" data-bs-toggle="modal" data-bs-target="#newTagModal">
                    <i class="bi bi-plus-lg me-2"></i>Nova Tag
                </button>
            </div>

            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Nome</th>
                            <th>Cor</th>
                            <th style="width: 100px;">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Tags != null && Model.Tags.Any())
                        {
                            @foreach (var tag in Model.Tags)
                            {
                                <tr>
                                    <td>@tag.Name</td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <span class="color-preview" style="background-color: @tag.Color;"></span>
                                            @tag.Color
                                        </div>
                                    </td>
                                    <td>
                                        <div class="table-actions">
                                            <button class="btn btn-icon btn-edit-sm" data-bs-toggle="modal" data-bs-target="#editTagModal" data-id="@tag.Id" data-name="@tag.Name" data-color="@tag.Color">
                                                <i class="bi bi-pencil-fill"></i>
                                            </button>
                                            <button class="btn btn-icon btn-delete-sm" data-bs-toggle="modal" data-bs-target="#deleteTagModal" data-id="@tag.Id">
                                                <i class="bi bi-trash-fill"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="newCollectionModal" tabindex="-1" aria-labelledby="newCollectionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newCollectionModalLabel">Nova Coleção</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <form method="post" asp-page-handler="Collection">
                <div class="modal-body">
                        <div class="mb-3">
                            <label for="collectionName" class="form-label">Nome da Coleção</label>
                            <input type="text" class="form-control" id="collectionName" asp-for="Collection.Name" placeholder="Digite o nome da coleção">
                            <span asp-validation-for="Collection.Name" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label for="collectionColor" class="form-label">Cor</label>
                            <div class="input-group color-picker-wrapper">
                                <input type="color" class="form-control form-control-color" id="collectionColor" asp-for="Collection.Color">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="collectionPriority" class="form-label">Prioridade</label>
                            <select class="form-select" id="collectionPriority" asp-for="Collection.Priority">
                                <option value="1">Alta</option>
                                <option value="2">Média</option>
                                <option value="3">Baixa</option>
                            </select>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-action btn-save">Salvar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="editCollectionModal" tabindex="-1" aria-labelledby="editCollectionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCollectionModalLabel">Editar Coleção</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <form method="post" asp-page-handler="EditCollection">
                <div class="modal-body">
                    <input type="hidden" id="editCollectionId" asp-for="CollectionEdit.Id" />
                    <div class="mb-3">
                        <label for="editCollectionName" class="form-label">Nome da Coleção</label>
                        <input type="text" class="form-control" id="editCollectionName" asp-for="CollectionEdit.Name">
                        <span asp-validation-for="CollectionEdit.Name" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label for="editCollectionColor" class="form-label">Cor</label>
                        <div class="input-group color-picker-wrapper">
                            <input type="color" class="form-control form-control-color" id="editCollectionColor" asp-for="CollectionEdit.Color">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="editCollectionPriority" class="form-label">Prioridade</label>
                        <select class="form-select" id="editCollectionPriority" asp-for="CollectionEdit.Priority">
                            <option value="1">Alta</option>
                            <option value="2">Média</option>
                            <option value="3">Baixa</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-action btn-save">Salvar Alterações</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteCollectionModal" tabindex="-1" aria-labelledby="deleteCollectionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteCollectionModalLabel">Excluir Coleção</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <form method="post" asp-page-handler="DeleteCollection">
                <input type="hidden" id="collectionIdToDelete" asp-for="CollectionDeleteId" />
                <div class="modal-body">
                    Tem certeza que deseja excluir este coleção? Esta ação não poderá ser desfeita.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-action btn-save">Excluir</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="newTagModal" tabindex="-1" aria-labelledby="newTagModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newTagModalLabel">Nova Tag</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <form method="post" asp-page-handler="Tag">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="tagName" class="form-label">Nome da Tag</label>
                        <input type="text" class="form-control" id="tagName" asp-for="Tag.Name" placeholder="Digite o nome da tag">
                        <span asp-validation-for="Tag.Name" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label for="tagColor" class="form-label">Cor</label>
                        <div class="input-group color-picker-wrapper">
                            <input type="color" class="form-control form-control-color" asp-for="Tag.Color" id="tagColor">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-action btn-save">Salvar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="editTagModal" tabindex="-1" aria-labelledby="editTagModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editTagModalLabel">Editar Tag</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <form method="post" asp-page-handler="EditTag">
                <div class="modal-body">
                    <input type="hidden" id="editTagId" asp-for="TagEdit.Id" />
                    <div class="mb-3">
                        <label for="editTagName" class="form-label">Nome da Tag</label>
                        <input type="text" class="form-control" id="editTagName" asp-for="TagEdit.Name">
                        <span asp-validation-for="TagEdit.Name" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label for="editTagColor" class="form-label">Cor</label>
                        <div class="input-group color-picker-wrapper">
                            <input type="color" class="form-control form-control-color" id="editTagColor" asp-for="TagEdit.Color">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-action btn-save">Salvar Alterações</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteTagModal" tabindex="-1" aria-labelledby="deleteTagModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteTagModalLabel">Excluir Tag</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <form method="post" asp-page-handler="DeleteTag">
                <input type="hidden" id="tagIdToDelete" asp-for="TagDeleteId" />
                <div class="modal-body">
                    Tem certeza que deseja excluir esta tag? Esta ação não poderá ser desfeita.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Excluir</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteTagModalLabel">Sair</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <div class="modal-body">
                Você precisará fazer login novamente para acessar sua conta.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form method="post" asp-page-handler="Logout">
                    <button type="submit" class="btn btn-danger">Sair</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProfileModalLabel">Editar Perfil</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <form method="post" enctype="multipart/form-data" asp-page-handler="EditUser" id="updateUserForm">
                <div class="modal-body">
                    <div class="text-center mb-4">
                        <div class="avatar-upload-wrapper">
                            <input type="file" id="avatarFile" name="avatarFile" accept="image/*" class="d-none">
                            <label for="avatarFile" style="cursor: pointer; display: block;">
                                <img src="@(!string.IsNullOrEmpty(Model.AuthenticatedUser.Photo) ? Model.AuthenticatedUser.Photo : "/uploads/avatars/default.png")" id="avatarPreview" class="user-avatar" alt="Foto de perfil">
                                <div class="avatar-upload-overlay">
                                    <div>
                                        <i class="bi bi-camera-fill fs-2 mb-1"></i>
                                        <div>Alterar foto</div>
                                    </div>
                                </div>
                            </label>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="profileName" class="form-label">Nome</label>
                        <input type="text" class="form-control" id="profileName" asp-for="EditUser.Name" value="@Model.AuthenticatedUser.Name">
                    </div>

                    <div class="mb-3">
                        <label for="profileEmail" class="form-label">E-mail</label>
                        <input type="email" class="form-control" id="profileEmail" value="@Model.AuthenticatedUser.Email" readonly>
                        <div class="small text-muted mt-1">O e-mail não pode ser alterado</div>
                    </div>

                    <div class="password-toggle-wrapper">
                        <label class="password-toggle-label">Alterar senha</label>
                        <label class="toggle-switch">
                            <input type="checkbox" id="passwordToggle">
                            <span class="toggle-slider"></span>
                        </label>
                    </div>

                    <div id="passwordFields" style="display: none;">
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Senha Atual</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="currentPassword" asp-for="PasswordUpdate.CurrentPassword" placeholder="Digite sua senha atual">
                                <button class="btn btn-outline-secondary" type="button" id="toggleCurrentPassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="newPassword" class="form-label">Nova Senha</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="newPassword" asp-for="PasswordUpdate.NewPassword" placeholder="Digite sua nova senha">
                                <button class="btn btn-outline-secondary" type="button" id="toggleNewPassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <div class="small text-muted mt-1">Mínimo de 8 caracteres</div>
                        </div>

                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirmar Nova Senha</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="confirmPassword" asp-for="PasswordUpdate.ConfirmPassword" placeholder="Confirme sua nova senha">
                                <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <span class="text-danger" id="errorMessage"></span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-action btn-save">Salvar Alterações</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    document.addEventListener('DOMContentLoaded', function() {

        document.getElementById("avatarFile").addEventListener("change", function () {

            const file = this.files[0];
            if (file) {
                const preview = document.getElementById("avatarPreview");
                preview.src = URL.createObjectURL(file);
            }
        });

        document.getElementById("updateUserForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const form = e.target;
            const formData = new FormData(form);
            const response = await fetch('?handler=EditUser', {
                method: 'POST',
                body: formData
            });

            const result = await response.json();

            const errorMessage = document.getElementById("errorMessage");
            errorMessage.textContent = '';

            if (result.success) {
                location.reload();
            } else {
                errorMessage.textContent = result.error;
            }
        });

        const passwordToggle = document.getElementById('passwordToggle');
        const passwordFields = document.getElementById('passwordFields');

        passwordToggle.addEventListener('change', function() {
            if (this.checked) {
                passwordFields.classList.remove('hide');
                passwordFields.classList.add('show');
                passwordFields.style.display = 'block';
            } else {
                passwordFields.classList.remove('show');
                passwordFields.classList.add('hide');
                document.getElementById('currentPassword').value = '';
                document.getElementById('newPassword').value = '';
                document.getElementById('confirmPassword').value = '';
                setTimeout(() => {
                    if (passwordFields.classList.contains('hide')) {
                        passwordFields.style.display = 'none';
                    }
                }, 400);
            }
        });

        const togglePasswordVisibility = (buttonId, inputId) => {
            const button = document.getElementById(buttonId);
            if (button) {
                button.addEventListener('click', function() {
                    const input = document.getElementById(inputId);
                    const icon = this.querySelector('i');

                    if (input.type === 'password') {
                        input.type = 'text';
                        icon.classList.remove('bi-eye');
                        icon.classList.add('bi-eye-slash');
                    } else {
                        input.type = 'password';
                        icon.classList.remove('bi-eye-slash');
                        icon.classList.add('bi-eye');
                    }
                });
            }
        };

        togglePasswordVisibility('toggleCurrentPassword', 'currentPassword');
        togglePasswordVisibility('toggleNewPassword', 'newPassword');
        togglePasswordVisibility('toggleConfirmPassword', 'confirmPassword');

        const editProfileButton = document.querySelector('.btn-edit-profile');
        if (editProfileButton) {
            editProfileButton.addEventListener('click', function() {
                const editProfileModal = new bootstrap.Modal(document.getElementById('editProfileModal'));
                editProfileModal.show();
            });
        }

        const editCollectionModal = document.getElementById('editCollectionModal');

        editCollectionModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;

            const id = button.getAttribute('data-id');
            const name = button.getAttribute('data-name');
            const priority = button.getAttribute('data-priority');
            const color = button.getAttribute('data-color');

            document.getElementById('editCollectionId').value = id;
            document.getElementById('editCollectionName').value = name;
            document.getElementById('editCollectionPriority').value = priority;
            document.getElementById('editCollectionColor').value = color;
        });

        const deleteCollectionModal = document.getElementById('deleteCollectionModal');

        deleteCollectionModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const collectionId = button.getAttribute('data-id');

            const input = deleteCollectionModal.querySelector('#collectionIdToDelete');
            input.value = collectionId;
        });

        const editTagModal = document.getElementById('editTagModal');

        editTagModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;

            const id = button.getAttribute('data-id');
            const name = button.getAttribute('data-name');
            const color = button.getAttribute('data-color');

            document.getElementById('editTagId').value = id;
            document.getElementById('editTagName').value = name;
            document.getElementById('editTagColor').value = color;
        });

        const deleteTagModal = document.getElementById('deleteTagModal');

        deleteTagModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const collectionId = button.getAttribute('data-id');

            const input = deleteTagModal.querySelector('#tagIdToDelete');
            input.value = collectionId;
        });
    });
</script>
